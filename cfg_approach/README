## Sorry that I'm no longer available for any issues related to this repository. ##

This repository contains scripts to capture raw data without mmWave Studio from TI's DCA1000EVM+IWR1642BOOST mmWave sensors.
You may custom your own data capturing and processing applications based on this repo.
Enjoy~

Prerequisites:
++ OS: Windows 10 or higher;
++ Devices: TI IWR1642BOOST + DCA1000EVM;
++ Device connection: Figure 19 in DCA1000EVM User Guide (./Doc/DCA1000EVM_User_Guide.pdf);
++ IWR1642 Firmware: Flash the mmWave_Demo image into IWR1642 (refer to page 8-9 Section 3.2 in ./Doc/mmWave_Sdk_User_Guide.pdf);
    (the firmware file is also provided in our repo at ./IWR1642/firmware/xwr16xx/mmw/xwr16xx_mmw_demo.bin)
++ IWR1642BOOST mode: Adjust the jumpers on IWR1642 board to put it into SOP mode 4 (functional mode)
    (refer to Table 4 in ./Doc/IWR1642BOOST_User_Guide.pdf, note that mmWave Studio requires SOP mode 2 (debug mode) to work);
++ MinGW tool installed (http://www.mingw.org/);
++ Build your own DCA1000 executable in ./DCA1000/Custom-build with MinGW tool;


Files Description:
./DCA1000/Custom-build/Release: executable for DCA1000 build on your own PC;
./Python4IWR/cfg/profile.cfg: IWR1642BOOST configuration file (the meaning of fields are described in page 18-31 of ./Doc/mmWave_Sdk_User_Guide.pdf);
./Python4IWR/config_and_wait_key.py: Config IWR1642BOOST with profile.cfg and wait for ENTER key to toggle sensors;
./Python4IWR/start_frame.py: Demo code to start IWR1642BOOST;
./Python4IWR/stop_frame.py: Demo code to stop IWR1642BOOST;
Others: DO NOT modify or delete;

Build ./DCA1000/Custom-build with MinGW tool:
1. Download and install mingw-get-setup.exe from http://www.mingw.org/wiki/Getting_Started;
2. Add C:\MinGW\bin to system path (suppose your mingw is installed in C:\MinGW);
3. Install mingw32-make, gcc, g++ with the following command (users from China should bypass the Great Firewall (GFW)):
"mingw-get install mingw32-make gcc g++"
4. Open cmd prompt as Admin and switch to ./DCA1000/Custom-build directory;
5. Run "mingw32-make clean";
6. Run "mingw32-make";
7. Check out ./DCA1000/Custom-build/Release for the files DCA1000EVM_CLI_Record.exe and DCA1000EVM_CLI_Control.exe;

Usage:
0. Make sure you meet all the requirements in the Prerequisites part;
1. Connect and power on DCA+IWR devices;
2. Open cmd prompt and change to ./DCA1000/Custom-build/Release/ (make sure that you have built ./DCA1000/Custom-build with MinGW);
3. Run 'DCA1000EVM_CLI_Control.exe fpga cf.json';
This script will automatically connect and configure DCA1000;
If success, then:
4. Create Data/ folder in ./DCA1000/Custom-build/Release/, which will be used to store the captured data;
5. Run 'DCA1000EVM_CLI_Record.exe start_record cf.json [file_prefix]';
[file_prefix] should be sustituted with your own file prefix, e.g., 'DCA1000EVM_CLI_Record.exe start_record cf.json Alice';
If success, then:
6. Open another cmd prompt and change to Python4IWR/;
7. Run config_and_wait_key.py with python3;
This script will automatically connect and configure IWR1642BOOST with ./Python4IWR/cfg/profile.cfg configuration file, and wait for ENTER key to toggle sensor;
8. Press Enter key to start mmwave sensor;
9. Press Enter key again to stop mmwave sensor;
10. Check ./DCA1000/Custom-build/Release/Data folder for captured data;

Cheers!
